#!/bin/sh
# Pre-push hook to check test coverage, linting, and build

echo "üîç Running quality checks before push..."

# 1. Run linter (strict mode)
echo "üìã Checking linting..."
npm run lint
if [ $? -ne 0 ]; then
    echo "‚ùå Linting failed. Fix all ESLint errors and warnings."
    exit 1
fi
echo "‚úÖ Linting passed"

# 2. Run tests with coverage
echo "üß™ Running tests and checking coverage..."
npm test > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "‚ùå Tests failed. Push aborted."
    exit 1
fi

# 3. Extract coverage percentage
COVERAGE=$(npm test -- --silent 2>/dev/null | grep -oP 'All files.*?(\d+\.\d+)' | grep -oP '\d+\.\d+' | tail -1)

if [ -z "$COVERAGE" ]; then
    echo "‚ùå Could not determine coverage. Push aborted."
    exit 1
fi

# 4. Check if coverage meets 90% threshold
THRESHOLD=90
if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
    echo "‚ùå Coverage $COVERAGE% is below $THRESHOLD% threshold. Push aborted."
    echo "üìù Please add more tests to increase coverage to at least 90%."
    exit 1
fi
echo "‚úÖ Coverage $COVERAGE% meets $THRESHOLD% threshold"

# 5. Test Docker build
echo "üê≥ Testing Docker build..."
docker build -t test-build . > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "‚ùå Docker build failed. Push aborted."
    exit 1
fi
echo "‚úÖ Docker build successful"

# Cleanup
docker rmi test-build > /dev/null 2>&1

echo "üéâ All quality checks passed! Push allowed."
exit 0
